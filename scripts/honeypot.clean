#!/bin/bash

EXT_IFACE=eth0
SERVICE=22

HOSTNAME=$(/bin/hostname)
LIFETIME=$((3600 * 6))
#LIFETIME=$((60*5))

datediff () {
    d1=$(/bin/date -d "$1" +%s)
    d2=$(/bin/date -d "$2" +%s)
    echo $((d1 - d2))
}

for CID in $(/usr/bin/docker ps -a --no-trunc | grep "honeypot-" | cut -f1 -d" "); do
    STARTED=$(/usr/bin/docker inspect --format '{{ .State.StartedAt }}' ${CID})
    RUNTIME=$(datediff now "${STARTED}")
    REMOTE_HOST=$(/usr/bin/docker inspect --format '{{ .Name }}' ${CID} | cut -f2 -d-)
    if [[ "${RUNTIME}" -gt "${LIFETIME}" ]]; then
        logger -p local3.info "Stopping honeypot container ${CID}"
        /usr/bin/docker stop $CID
        MID=$(/bin/cat /var/lib/docker/image/aufs/layerdb/mounts/${CID}/mount-id)
        mkdir -p /var/log/honeypot/$REMOTE_HOST
        # Save asciiname.json
        docker cp $CID:/tmp/asciinema.json /var/log/honeypot/$REMOTE_HOST/asciinema_$CID.json > /dev/null 2>&1
        cp -a /var/lib/docker/aufs/diff/$MID /var/log/honeypot/$REMOTE_HOST
        #/usr/bin/docker rm -f $CID
        
    fi

    RUNNING=$(/usr/bin/docker inspect --format '{{ .State.Running }}' ${CID})

    if [[ "$RUNNING" != "true" ]]; then
	# delete iptables rule
	CIP=$(/usr/bin/docker inspect --format '{{ .NetworkSettings.IPAddress }}' ${CID})
	REMOTE_HOST=$(/usr/bin/docker inspect --format '{{ .Name }}' ${CID} | cut -f2 -d-)
	/sbin/iptables -t nat -D PREROUTING -p tcp -i ${EXT_IFACE} -s ${REMOTE_HOST} --dport ${SERVICE} -j DNAT --to-destination ${CIP}
        logger -p local3.info "Removing honeypot container ${CID}"
        /usr/bin/docker rm -f $CID
    fi
done

